# Workflow: Build and Deploy Static Content to GitHub Pages and via SCP
name: Build and Deploy to Pages and SCP

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Gulp build
      - name: Run Gulp Build
        run: gulp build

      # Step 5: Upload Build Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: tacc.org.uk/ # Ensure this matches your build output directory

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      # Step 1: Download Build Artifact
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: tacc.org.uk/

      # Step 2: Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 3: Upload Pages Artifact
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: tacc.org.uk/ # Ensure this matches your build output directory

      # Step 4: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  deploy_scp:
    name: Deploy via SCP
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Copy files via SCP
      - name: Copy files via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 185.194.90.27
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 722
          source: "tacc.org.uk/*"  # Adjust to match your specific output files
          target: "/home/dacecfbf"
